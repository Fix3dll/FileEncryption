package me.fix3dll.fileencryption;

import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Mehmet Serhan Düzce - 203405026
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    private List iconList() {
        List<Image> icons = new ArrayList();
        icons.add(new ImageIcon(getClass().getResource("/images/16x16.png")).getImage());
        icons.add(new ImageIcon(getClass().getResource("/images/32x32.png")).getImage());
        icons.add(new ImageIcon(getClass().getResource("/images/64x64.png")).getImage());
        icons.add(new ImageIcon(getClass().getResource("/images/128x128.png")).getImage());
        return icons;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        encryptButton = new javax.swing.JButton(createImageIcon("/images/lock.png"));
        text = new javax.swing.JLabel();
        decryptButton = new javax.swing.JButton(createImageIcon("/images/key.png"));
        text2 = new javax.swing.JLabel();
        levelSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dosya Şifreleme Uygulaması");
        setIconImages(iconList());
        setResizable(false);

        log.setEditable(false);
        log.setColumns(20);
        log.setRows(5);
        log.setText("=> Bu uygulama sezar şifrelemesi algoritmasıyla oluşturulmuştur." + newline
            + "=> Dosya seviye kaçla şifrelendiyse sadece o seviyeyle çözülebilir!" + newline
            + "=> Mehmet Serhan Düzce - 203405026" + newline);
        log.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jScrollPane1.setViewportView(log);

        encryptButton.setText("Dosyayı şifrele...");
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });

        text.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        text.setText("Dosya Şifreleme Programı");

        decryptButton.setText("Dosyayı çöz...");
        decryptButton.setToolTipText("");
        decryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptButtonActionPerformed(evt);
            }
        });

        text2.setText("Şifreleme seviyesi: ");

        levelSpinner.setModel(new javax.swing.SpinnerNumberModel(1, -25, 25, 1));
        levelSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GUI.this.stateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(encryptButton)
                .addGap(93, 93, 93)
                .addComponent(decryptButton)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(text)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(text2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(levelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(text)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text2)
                    .addComponent(levelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encryptButton)
                    .addComponent(decryptButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static private int encryptionLevel = 1;
    static private final String newline = "\n";
    JFileChooser fc = new JFileChooser();
    FileFilter filter = new FileNameExtensionFilter("Text File", "txt");

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        if (evt.getSource() == encryptButton) {
            fc.setDialogTitle("Şifrelenecek dosyayı seçin...");
            fc.setAcceptAllFileFilterUsed(false);
            fc.setFileFilter(filter);

            getInstance().setIconImage(createImageIcon("/images/folder.png").getImage());
            int returnVal = fc.showOpenDialog(getInstance());

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                log.append("Şifreleniyor: " + file.getName() + newline);
                FileEncryption.encryptFile(file, encryptionLevel);
                log.append("Dosya \"" + file.getName().replace(".txt", "")
                        + "Sifrelenmis.txt\" isminde \"" + encryptionLevel
                        + "\" seviyesinde şifrelendi!" + newline);
            }
            log.setCaretPosition(log.getDocument().getLength());
        }
    }//GEN-LAST:event_encryptButtonActionPerformed

    private void decryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptButtonActionPerformed
        if (evt.getSource() == decryptButton) {
            fc.setDialogTitle("Çözülecek dosyayı seçin...");
            fc.setAcceptAllFileFilterUsed(false);
            fc.setFileFilter(filter);
            getInstance().setIconImage(createImageIcon("/images/folder.png").getImage());
            int returnVal = fc.showSaveDialog(getInstance());

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                log.append("Çözülüyor: " + file.getName() + newline);
                FileDecryption.decryptFile(file, encryptionLevel);
                log.append("Dosya \"" + file.getName().replace("Sifrelenmis.txt", "")
                        + ".txt\" isminde \"" + encryptionLevel
                        + "\" seviyesinde şifresi çözümlendi!" + newline);
            }
            log.setCaretPosition(log.getDocument().getLength());
        }
    }//GEN-LAST:event_decryptButtonActionPerformed

    private void stateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_stateChanged
        encryptionLevel = (int) levelSpinner.getValue();
    }//GEN-LAST:event_stateChanged

    /**
     * JFrame ve JFileChooser'ın iconlarını ayırmak için örnek class oluşturduk.
     */
    private static GUI instance;

    public static GUI getInstance() {
        if (instance == null) {
            instance = new GUI();
        }
        return instance;
    }

    /**
     * Dosya yolu boşsa null döndürüp açıklama yazdırır,
     * mevcutsa iconu döndürür.
     */
    private ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = GUI.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            log.append("Icon dosyası bulunamadı: " + path);
            return null;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new GUI().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decryptButton;
    private javax.swing.JButton encryptButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner levelSpinner;
    private javax.swing.JTextArea log;
    private javax.swing.JLabel text;
    private javax.swing.JLabel text2;
    // End of variables declaration//GEN-END:variables
}
